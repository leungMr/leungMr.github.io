(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{602:function(_,t,v){_.exports=v.p+"assets/img/image-20211208152516073.babb4e70.png"},603:function(_,t,v){_.exports=v.p+"assets/img/image-20211208154257161.4caf9fad.png"},604:function(_,t,v){_.exports=v.p+"assets/img/image-20211208154813527.eae45862.png"},605:function(_,t,v){_.exports=v.p+"assets/img/image-20211208155855611.89ac40cf.png"},606:function(_,t,v){_.exports=v.p+"assets/img/image-20211208175951429.1b2e6533.png"},607:function(_,t,v){_.exports=v.p+"assets/img/image-20211208194601410.60ce5ee7.png"},608:function(_,t,v){_.exports=v.p+"assets/img/image-20211208194939553.ba33e1e9.png"},770:function(_,t,v){"use strict";v.r(t);var a=v(31),s=Object(a.a)({},(function(){var _=this,t=_.$createElement,a=_._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"利用基元分解的机载点云复杂建筑物自动重建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用基元分解的机载点云复杂建筑物自动重建"}},[_._v("#")]),_._v(" 利用基元分解的机载点云复杂建筑物自动重建")]),_._v(" "),a("p",[_._v("赵赛男 遥感信息")]),_._v(" "),a("blockquote",[a("p",[a("strong",[_._v("研究内容")])]),_._v(" "),a("ul",[a("li",[_._v("对屋顶面构建拓扑图并依据最小环原则进行拓扑分解，将复杂建筑物分解成多个简单基元")]),_._v(" "),a("li",[_._v("对基元中的面加入约束条件，进行最小二乘法拟合")]),_._v(" "),a("li",[_._v("基元模型边界、顶点的计算，进而生成模型")])])]),_._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:v(602),alt:"image-20211208152516073"}}),_._v(" "),a("p",[a("em",[a("strong",[_._v("关联学位论文：")])])]),_._v(" "),a("ul",[a("li",[_._v("基于机载LiDAR的规则建筑物自动重建研究")])]),_._v(" "),a("h2",{attrs:{id:"_1-原理和方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理和方法"}},[_._v("#")]),_._v(" 1 原理和方法")]),_._v(" "),a("h3",{attrs:{id:"_1-1-数据预处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据预处理"}},[_._v("#")]),_._v(" 1.1 数据预处理")]),_._v(" "),a("p",[_._v("数据预处理包括"),a("strong",[_._v("平面分割")]),_._v("和"),a("strong",[_._v("屋顶面轮廓线提取")]),_._v("。")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("建筑物"),a("strong",[_._v("屋顶面")]),_._v("的分割算法："),a("code",[_._v("区域增长算法")]),_._v("、"),a("code",[_._v("聚类算法")]),_._v("、"),a("code",[_._v("3D霍夫变换")]),_._v("、"),a("code",[_._v("RANSAC算法")]),_._v("、等")])]),_._v(" "),a("li",[a("p",[a("code",[_._v("a-shaps")]),_._v("算法用来提取各个屋顶面的"),a("strong",[_._v("离散边界点")])])])]),_._v(" "),a("p",[a("img",{attrs:{src:v(603),alt:"image-20211208154257161"}})]),_._v(" "),a("h3",{attrs:{id:"_1-2-拓扑图分解与几何约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-拓扑图分解与几何约束"}},[_._v("#")]),_._v(" 1.2 拓扑图分解与几何约束")]),_._v(" "),a("h4",{attrs:{id:"_1-2-1-拓扑图生成与分解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-拓扑图生成与分解"}},[_._v("#")]),_._v(" 1.2.1 拓扑图生成与分解")]),_._v(" "),a("p",[_._v("建筑物的拓扑图包含3个基本要素：")]),_._v(" "),a("ul",[a("li",[_._v("独立点：不与其他屋顶面相邻的屋顶面")]),_._v(" "),a("li",[_._v("独立边：代表２个屋顶面之间的相邻关系")]),_._v(" "),a("li",[_._v("最小独立环：代表环中各个屋顶面相交于一个点")])]),_._v(" "),a("p",[a("img",{attrs:{src:v(604),alt:"image-20211208154813527"}})]),_._v(" "),a("h4",{attrs:{id:"_1-2-2-基元库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-基元库"}},[_._v("#")]),_._v(" 1.2.2 基元库")]),_._v(" "),a("p",[_._v("基元库的类型（大类）：")]),_._v(" "),a("ul",[a("li",[_._v("点式：即单独存在的建筑")]),_._v(" "),a("li",[_._v("边式：可分为对称平面对和非对称平面对")]),_._v(" "),a("li",[_._v("环式：")])]),_._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:v(605),alt:"image-20211208155855611"}}),_._v(" "),a("h4",{attrs:{id:"_1-2-3-最小二乘法拟合约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-最小二乘法拟合约束"}},[_._v("#")]),_._v(" 1.2.3 最小二乘法拟合约束")]),_._v(" "),a("p",[_._v("根据基元的拓扑子图以及屋顶面法向量之间的关系引进几何约束，涉及的约束类型及判断条件如下：")]),_._v(" "),a("ol",[a("li",[_._v("若单个屋顶面的法向量与地面近似垂直，则屋顶面水平；")]),_._v(" "),a("li",[_._v("若两屋顶面对称，则它们的坡度相同；")]),_._v(" "),a("li",[_._v("若两屋顶面相邻且相交线的方向向量与地面近似平行，则相交线水平；")]),_._v(" "),a("li",[_._v("若基元的拓扑子图为环式，多个屋顶面交于一点。")])]),_._v(" "),a("p",[_._v("。。。方程建立，看不懂。。。")]),_._v(" "),a("p",[_._v("。。。看不懂。。。")]),_._v(" "),a("p",[_._v("最后建立了每个面的方程。。。和屋顶交点的坐标。。。")]),_._v(" "),a("h3",{attrs:{id:"_1-3-几何重建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-几何重建"}},[_._v("#")]),_._v(" 1.3 几何重建")]),_._v(" "),a("h4",{attrs:{id:"_1-3-1-基元模型生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-基元模型生成"}},[_._v("#")]),_._v(" 1.3.1 基元模型生成")]),_._v(" "),a("p",[_._v("目的：将复杂的屋顶面，分解为简单的规则基元，并将基元模型的几何要素归纳为４类：屋顶交点与边界角点、屋脊线与边界线。其中：")]),_._v(" "),a("ul",[a("li",[a("strong",[_._v("屋顶交点")]),_._v("和"),a("strong",[_._v("屋脊线")]),_._v("： 根据基元间的拓扑关系，利用屋顶面相交求得。")]),_._v(" "),a("li",[a("strong",[_._v("边界线")]),_._v("：采用建筑物整体外轮廓结合屋脊线的方法")]),_._v(" "),a("li",[a("strong",[_._v("边界角点")]),_._v("：通过边界线拟合的"),a("strong",[_._v("辅助面")]),_._v("与屋顶面相交求 得")])]),_._v(" "),a("p",[a("img",{attrs:{src:v(606),alt:"image-20211208175951429"}})]),_._v(" "),a("p",[a("strong",[_._v("具体步骤：")])]),_._v(" "),a("ol",[a("li",[_._v("用a-shapes算法提取轮廓点，连接成小线段，并进行分组，精化。该边界线称为一类边界线；")]),_._v(" "),a("li",[_._v("使用屋脊线充当二类边界线；")]),_._v(" "),a("li",[_._v("以上2类初始边界线确定后，通过将边界线拟合的辅助面与屋顶面相交可求得边界角点")])]),_._v(" "),a("p",[a("strong",[_._v("在求解边界角点的过程中，将其分为3类：")])]),_._v(" "),a("ul",[a("li",[a("p",[_._v("位于屋脊线上的边界角点：Ａ 类点，利用相邻的２条边界线拟合一个辅助面并与屋脊线相交")])]),_._v(" "),a("li",[a("p",[_._v("非屋脊线上与 Ａ 类点相邻的边界角点：B类点，将相邻的2条边界线分别作一个垂面，与该点所在的屋顶面相交")])]),_._v(" "),a("li",[a("p",[_._v("非对称面上的的边界角点：C类点，方法基本同上")])])]),_._v(" "),a("p",[a("img",{attrs:{src:v(607),alt:"image-20211208194601410"}})]),_._v(" "),a("h4",{attrs:{id:"_1-3-2-建筑模型生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-建筑模型生成"}},[_._v("#")]),_._v(" 1.3.2 建筑模型生成")]),_._v(" "),a("p",[_._v("屋顶面：以上的各基元的重建过程，组合后可得到建筑物"),a("strong",[_._v("屋顶面")]),_._v("的模型。")]),_._v(" "),a("p",[_._v("墙面：本文将屋顶模型的边界 角点直接 投影至地面，并将两两相邻的边界角点与其投影点构建出的平面作为墙面")]),_._v(" "),a("h2",{attrs:{id:"_2-实验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-实验"}},[_._v("#")]),_._v(" 2 实验")]),_._v(" "),a("p",[a("img",{attrs:{src:v(608),alt:"image-20211208194939553"}})])])}),[],!1,null,null,null);t.default=s.exports}}]);